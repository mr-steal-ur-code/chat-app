/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Message, User } from "./interfaces";
import { AuthService, DatabaseService, FireEnjinFetchEvent, FireEnjinTriggerInput } from "@fireenjin/sdk";
export { Message, User } from "./interfaces";
export { AuthService, DatabaseService, FireEnjinFetchEvent, FireEnjinTriggerInput } from "@fireenjin/sdk";
export namespace Components {
    interface AddRoom {
    }
    interface AppRouter {
    }
    interface ChatApp {
    }
    interface ItemProfile {
        "auth": AuthService;
        "db": DatabaseService;
        "user": User;
    }
    interface ModalLogin {
        "auth": AuthService;
        "userId": any;
    }
    interface PageChat {
        "db": DatabaseService;
        "messages": Message[];
        "roomId": string;
    }
    interface PageChatList {
    }
    interface PageLogin {
        "auth": AuthService;
        "db": DatabaseService;
    }
    interface PageRoomList {
    }
    interface PopoverAddRoom {
    }
    interface PopoverEditProfile {
        "user": User;
    }
    interface PopoverLoginWithEmail {
        "auth": AuthService;
        "userId": any;
    }
    interface PopoverLogout {
    }
}
export interface ItemProfileCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLItemProfileElement;
}
export interface ModalLoginCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLModalLoginElement;
}
export interface PageChatCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPageChatElement;
}
export interface PageLoginCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPageLoginElement;
}
export interface PageRoomListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPageRoomListElement;
}
export interface PopoverLogoutCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPopoverLogoutElement;
}
declare global {
    interface HTMLAddRoomElement extends Components.AddRoom, HTMLStencilElement {
    }
    var HTMLAddRoomElement: {
        prototype: HTMLAddRoomElement;
        new (): HTMLAddRoomElement;
    };
    interface HTMLAppRouterElement extends Components.AppRouter, HTMLStencilElement {
    }
    var HTMLAppRouterElement: {
        prototype: HTMLAppRouterElement;
        new (): HTMLAppRouterElement;
    };
    interface HTMLChatAppElement extends Components.ChatApp, HTMLStencilElement {
    }
    var HTMLChatAppElement: {
        prototype: HTMLChatAppElement;
        new (): HTMLChatAppElement;
    };
    interface HTMLItemProfileElement extends Components.ItemProfile, HTMLStencilElement {
    }
    var HTMLItemProfileElement: {
        prototype: HTMLItemProfileElement;
        new (): HTMLItemProfileElement;
    };
    interface HTMLModalLoginElement extends Components.ModalLogin, HTMLStencilElement {
    }
    var HTMLModalLoginElement: {
        prototype: HTMLModalLoginElement;
        new (): HTMLModalLoginElement;
    };
    interface HTMLPageChatElement extends Components.PageChat, HTMLStencilElement {
    }
    var HTMLPageChatElement: {
        prototype: HTMLPageChatElement;
        new (): HTMLPageChatElement;
    };
    interface HTMLPageChatListElement extends Components.PageChatList, HTMLStencilElement {
    }
    var HTMLPageChatListElement: {
        prototype: HTMLPageChatListElement;
        new (): HTMLPageChatListElement;
    };
    interface HTMLPageLoginElement extends Components.PageLogin, HTMLStencilElement {
    }
    var HTMLPageLoginElement: {
        prototype: HTMLPageLoginElement;
        new (): HTMLPageLoginElement;
    };
    interface HTMLPageRoomListElement extends Components.PageRoomList, HTMLStencilElement {
    }
    var HTMLPageRoomListElement: {
        prototype: HTMLPageRoomListElement;
        new (): HTMLPageRoomListElement;
    };
    interface HTMLPopoverAddRoomElement extends Components.PopoverAddRoom, HTMLStencilElement {
    }
    var HTMLPopoverAddRoomElement: {
        prototype: HTMLPopoverAddRoomElement;
        new (): HTMLPopoverAddRoomElement;
    };
    interface HTMLPopoverEditProfileElement extends Components.PopoverEditProfile, HTMLStencilElement {
    }
    var HTMLPopoverEditProfileElement: {
        prototype: HTMLPopoverEditProfileElement;
        new (): HTMLPopoverEditProfileElement;
    };
    interface HTMLPopoverLoginWithEmailElement extends Components.PopoverLoginWithEmail, HTMLStencilElement {
    }
    var HTMLPopoverLoginWithEmailElement: {
        prototype: HTMLPopoverLoginWithEmailElement;
        new (): HTMLPopoverLoginWithEmailElement;
    };
    interface HTMLPopoverLogoutElement extends Components.PopoverLogout, HTMLStencilElement {
    }
    var HTMLPopoverLogoutElement: {
        prototype: HTMLPopoverLogoutElement;
        new (): HTMLPopoverLogoutElement;
    };
    interface HTMLElementTagNameMap {
        "add-room": HTMLAddRoomElement;
        "app-router": HTMLAppRouterElement;
        "chat-app": HTMLChatAppElement;
        "item-profile": HTMLItemProfileElement;
        "modal-login": HTMLModalLoginElement;
        "page-chat": HTMLPageChatElement;
        "page-chat-list": HTMLPageChatListElement;
        "page-login": HTMLPageLoginElement;
        "page-room-list": HTMLPageRoomListElement;
        "popover-add-room": HTMLPopoverAddRoomElement;
        "popover-edit-profile": HTMLPopoverEditProfileElement;
        "popover-login-with-email": HTMLPopoverLoginWithEmailElement;
        "popover-logout": HTMLPopoverLogoutElement;
    }
}
declare namespace LocalJSX {
    interface AddRoom {
    }
    interface AppRouter {
    }
    interface ChatApp {
    }
    interface ItemProfile {
        "auth"?: AuthService;
        "db"?: DatabaseService;
        "onChatPopoverOpen"?: (event: ItemProfileCustomEvent<any>) => void;
        "onFireenjinFetch"?: (event: ItemProfileCustomEvent<FireEnjinFetchEvent>) => void;
        "user"?: User;
    }
    interface ModalLogin {
        "auth"?: AuthService;
        "onChatModalClose"?: (event: ModalLoginCustomEvent<any>) => void;
        "userId"?: any;
    }
    interface PageChat {
        "db"?: DatabaseService;
        "messages"?: Message[];
        "onFireenjinFetch"?: (event: PageChatCustomEvent<FireEnjinFetchEvent>) => void;
        "onFireenjinTrigger"?: (event: PageChatCustomEvent<FireEnjinTriggerInput>) => void;
        "roomId"?: string;
    }
    interface PageChatList {
    }
    interface PageLogin {
        "auth"?: AuthService;
        "db"?: DatabaseService;
        "onChatPopoverOpen"?: (event: PageLoginCustomEvent<any>) => void;
    }
    interface PageRoomList {
        "onFireenjinFetch"?: (event: PageRoomListCustomEvent<FireEnjinFetchEvent>) => void;
    }
    interface PopoverAddRoom {
    }
    interface PopoverEditProfile {
        "user"?: User;
    }
    interface PopoverLoginWithEmail {
        "auth"?: AuthService;
        "userId"?: any;
    }
    interface PopoverLogout {
        "onFireenjinTrigger"?: (event: PopoverLogoutCustomEvent<FireEnjinTriggerInput>) => void;
    }
    interface IntrinsicElements {
        "add-room": AddRoom;
        "app-router": AppRouter;
        "chat-app": ChatApp;
        "item-profile": ItemProfile;
        "modal-login": ModalLogin;
        "page-chat": PageChat;
        "page-chat-list": PageChatList;
        "page-login": PageLogin;
        "page-room-list": PageRoomList;
        "popover-add-room": PopoverAddRoom;
        "popover-edit-profile": PopoverEditProfile;
        "popover-login-with-email": PopoverLoginWithEmail;
        "popover-logout": PopoverLogout;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "add-room": LocalJSX.AddRoom & JSXBase.HTMLAttributes<HTMLAddRoomElement>;
            "app-router": LocalJSX.AppRouter & JSXBase.HTMLAttributes<HTMLAppRouterElement>;
            "chat-app": LocalJSX.ChatApp & JSXBase.HTMLAttributes<HTMLChatAppElement>;
            "item-profile": LocalJSX.ItemProfile & JSXBase.HTMLAttributes<HTMLItemProfileElement>;
            "modal-login": LocalJSX.ModalLogin & JSXBase.HTMLAttributes<HTMLModalLoginElement>;
            "page-chat": LocalJSX.PageChat & JSXBase.HTMLAttributes<HTMLPageChatElement>;
            "page-chat-list": LocalJSX.PageChatList & JSXBase.HTMLAttributes<HTMLPageChatListElement>;
            "page-login": LocalJSX.PageLogin & JSXBase.HTMLAttributes<HTMLPageLoginElement>;
            "page-room-list": LocalJSX.PageRoomList & JSXBase.HTMLAttributes<HTMLPageRoomListElement>;
            "popover-add-room": LocalJSX.PopoverAddRoom & JSXBase.HTMLAttributes<HTMLPopoverAddRoomElement>;
            "popover-edit-profile": LocalJSX.PopoverEditProfile & JSXBase.HTMLAttributes<HTMLPopoverEditProfileElement>;
            "popover-login-with-email": LocalJSX.PopoverLoginWithEmail & JSXBase.HTMLAttributes<HTMLPopoverLoginWithEmailElement>;
            "popover-logout": LocalJSX.PopoverLogout & JSXBase.HTMLAttributes<HTMLPopoverLogoutElement>;
        }
    }
}
